local blocks = require("blocks")
local entities = require("entities")
local inventory = require("inventory")

blocks.ForeachAllBlocks(function (block)

    if block:HasAnyFlag(blocks.Flags.AffectedByGravity) then
        blocks.AddOnTickEvent(block, function (x, y, z, b)
            local blockBelow = blocks.GetBlockAt(x, y - 1, z)

            if blockBelow:HasAnyFlag(blocks.Flags.IgnoreCollisions) then
                blocks.SetBlockTypeAt(x, y, z, blocks.Type.Air)

                local entity = entities.Create(entities.GravityBlockEntity)
                entity:Initialize(x, y, z, b)
            end
        end)
    end

    if block:HasAnyFlag(blocks.Flags.Liquid) then
        blocks.AddOnTickEvent(block, function (x, y, z, b)
            local down = blocks.GetBlockAt(x, y - 1, z)
            local left = blocks.GetBlockAt(x - 1, y, z)
            local right = blocks.GetBlockAt(x + 1, y, z)
            local front = blocks.GetBlockAt(x, y, z + 1)
            local back = blocks.GetBlockAt(x, y, z - 1)
            
            if down.Type == blocks.Type.Air or down:HasAnyFlag(blocks.Flags.FlowersAndPlants) then
                blocks.SetBlockTypeAt(x, y - 1, z, block.Type)
            end

            if left.Type == blocks.Type.Air or left:HasAnyFlag(blocks.Flags.FlowersAndPlants) then
                blocks.SetBlockTypeAt(x - 1, y, z, block.Type)
            end

            if right.Type == blocks.Type.Air or right:HasAnyFlag(blocks.Flags.FlowersAndPlants) then
                blocks.SetBlockTypeAt(x + 1, y, z, block.Type)
            end

            if front.Type == blocks.Type.Air or front:HasAnyFlag(blocks.Flags.FlowersAndPlants) then
                blocks.SetBlockTypeAt(x, y, z + 1, block.Type)
            end

            if back.Type == blocks.Type.Air or back:HasAnyFlag(blocks.Flags.FlowersAndPlants) then
                blocks.SetBlockTypeAt(x, y, z - 1, block.Type)
            end
        end)
    end

    if block:HasAnyFlag(blocks.Flags.FlowersAndPlants) then
        blocks.AddOnTickEvent(block, function (x, y, z, b)
            local down = blocks.GetBlockTypeAt(x, y - 1, z)
        
            if down ~= blocks.Type.Dirt and down ~= blocks.Type.Grass then
                blocks.SetBlockTypeAt(x, y, z, blocks.Type.Air)
            end
        end)
    end

end)


blocks.AddOnRandomTickEvent(blocks.GetBlockByType(blocks.Type.Dirt), function (x, y, z, b)
    local up = blocks.GetBlockAt(x, y + 1, z)
    local left = blocks.GetBlockTypeAt(x - 1, y, z)
    local right = blocks.GetBlockTypeAt(x + 1, y, z)
    local front = blocks.GetBlockTypeAt(x, y, z + 1)
    local back = blocks.GetBlockTypeAt(x, y, z - 1)

    local grassCount = 0

    if left == blocks.Type.Grass then
        grassCount = grassCount + 1
    end

    if right == blocks.Type.Grass then
        grassCount = grassCount + 1
    end

    if front == blocks.Type.Grass then
        grassCount = grassCount + 1
    end

    if back == blocks.Type.Grass then
        grassCount = grassCount + 1
    end

    if (up.Type == blocks.Type.Air or up:HasAnyFlag(blocks.Flags.FlowersAndPlants)) and grassCount > 2 then
        blocks.SetBlockTypeAt(x, y, z, blocks.Type.Grass)
    end
end)


blocks.AddOnTickEvent(blocks.GetBlockByType(blocks.Type.Grass), function (x, y, z, b)
    local up = blocks.GetBlockAt(x, y + 1, z)

    if up.Type ~= blocks.Type.Air and not up:HasAllFlags(blocks.Flags.FlowersAndPlants) then
        blocks.SetBlockTypeAt(x, y, z, blocks.Type.Dirt)
    end
end)


blocks.AddOnClickEvent(blocks.GetBlockByType(blocks.Type.TNT), function (x, y, z, b)
    blocks.SetBlockTypeAt(x, y, z, blocks.Type.Air)
    local entity = entities.Create(entities.TNTBlockEntity)
    entity:Initialize(x, y, z, b)
end)


blocks.AddOnClickEvent(blocks.GetBlockByType(blocks.Type.Noteblock), function (x, y, z, b)
    local state = blocks.GetBlockStateAt(x, y, z)
    state = state + 1

    if state > 24 then
        state = 0
    end

    --这里需要播放音效

    blocks.SetBlockStateAt(x, y, z, state)
end)


inventory.SetItemType(0, inventory.ItemType.Noteblock)
inventory.SetItemType(1, inventory.ItemType.CobbleStone)
inventory.SetItemType(2, inventory.ItemType.CraftingTable)
inventory.SetItemType(3, inventory.ItemType.DiamondBlock)
inventory.SetItemType(4, inventory.ItemType.Glass)
inventory.SetItemType(5, inventory.ItemType.GlowStone)
inventory.SetItemType(6, inventory.ItemType.Log_Oak)
inventory.SetItemType(7, inventory.ItemType.Planks_Oak)
inventory.SetItemType(8, inventory.ItemType.TNT)